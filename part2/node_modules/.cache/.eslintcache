[{"/Users/nicolaskivimaki/fullstack2023_osa3/part2/src/index.js":"1","/Users/nicolaskivimaki/fullstack2023_osa3/part2/src/App.js":"2","/Users/nicolaskivimaki/fullstack2023_osa3/part2/src/components/Note.js":"3","/Users/nicolaskivimaki/fullstack2023_osa3/part2/src/services/notes.js":"4"},{"size":154,"mtime":1689943451698,"results":"5","hashOfConfig":"6"},{"size":2842,"mtime":1689944068089,"results":"7","hashOfConfig":"6"},{"size":298,"mtime":1689943656600,"results":"8","hashOfConfig":"6"},{"size":637,"mtime":1690748033954,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y45k5",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nicolaskivimaki/fullstack2023_osa3/part2/src/index.js",[],[],"/Users/nicolaskivimaki/fullstack2023_osa3/part2/src/App.js",["23","24"],[],"import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2022</em>\n    </div>\n  )\n}\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([])\n  const [showAll, setShowAll] = useState(true)\n  const [newNote, setNewNote] = useState('')\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\n\n  const toggleImportanceOf = id => {\n    const url = `http://localhost:3001/notes/${id}`\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n        .update(id, changedNote)\n          .then(returnedNote => {\n          setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  useEffect(() => {\n    noteService\n      .getAll()\n        .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n  console.log('render', notes.length, 'notes')\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    }\n  \n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  } \n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div> \n      <ul>\n        {notesToShow.map(note => \n          <Note key={note.id} \n          note={note} \n          toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n\n      <form onSubmit={addNote}>\n        <input \n        value={newNote}\n        onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>   \n      <Footer />\n    </div>\n  )\n}\n\nexport default App ","/Users/nicolaskivimaki/fullstack2023_osa3/part2/src/components/Note.js",[],[],"/Users/nicolaskivimaki/fullstack2023_osa3/part2/src/services/notes.js",["25"],[],{"ruleId":"26","severity":1,"message":"27","line":2,"column":8,"nodeType":"28","messageId":"29","endLine":2,"endColumn":13},{"ruleId":"26","severity":1,"message":"30","line":40,"column":11,"nodeType":"28","messageId":"29","endLine":40,"endColumn":14},{"ruleId":"31","severity":1,"message":"32","line":25,"column":1,"nodeType":"33","endLine":25,"endColumn":42},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'url' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]